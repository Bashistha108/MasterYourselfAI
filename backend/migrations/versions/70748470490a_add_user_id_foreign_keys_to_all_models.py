"""Add user_id foreign keys to all models

Revision ID: 70748470490a
Revises: 3e0f2b1abfa4
Create Date: 2025-08-31 17:07:12.577624

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '70748470490a'
down_revision = '3e0f2b1abfa4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.Column('goal_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('intensity', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('feedback')
    with op.batch_alter_table('ai_challenges', schema=None) as batch_op:
        batch_op.add_column(sa.Column('challenge_text', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('challenge_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('completed_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('intensity', sa.Integer(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('title')
        batch_op.drop_column('description')
        batch_op.drop_column('difficulty')
        batch_op.drop_column('completion_date')
        batch_op.drop_column('challenge_type')

    with op.batch_alter_table('daily_goal_intensities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('intensity_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('intensity',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('daily_goal_intensities_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'weekly_goals', ['goal_id'], ['id'])
        batch_op.drop_column('user_id')
        batch_op.drop_column('notes')
        batch_op.drop_column('log_date')
        batch_op.drop_column('goal_type')

    with op.batch_alter_table('daily_problem_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('faced', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('problem_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('daily_problem_logs_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('notes')
        batch_op.drop_column('log_date')

    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sender', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('recipient', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('date', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('email_type', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('is_read', sa.Boolean(), nullable=False))
        batch_op.alter_column('subject',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=False)
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('emails_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('admin_reply')
        batch_op.drop_column('status')
        batch_op.drop_column('user_email')

    with op.batch_alter_table('goal_notes', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.drop_constraint('goal_notes_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'long_term_goals', ['goal_id'], ['id'])
        batch_op.drop_column('user_id')
        batch_op.drop_column('goal_type')

    with op.batch_alter_table('goal_ratings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('notes',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.drop_constraint('goal_ratings_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('long_term_goals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.alter_column('start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('target_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_constraint('long_term_goals_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('completed')

    with op.batch_alter_table('problems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('weight', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('category', sa.String(length=100), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('title')
        batch_op.drop_column('priority')

    with op.batch_alter_table('quick_notes', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.drop_constraint('quick_notes_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('title')

    with op.batch_alter_table('quick_wins', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('completed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('points', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('category', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('quick_wins_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('todo_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('content', sa.Text(), nullable=False))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('due_date')
        batch_op.drop_column('title')
        batch_op.drop_column('priority')
        batch_op.drop_column('description')

    with op.batch_alter_table('weekly_goal_intensities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_start', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('intensity',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('weekly_goal_intensities_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'weekly_goals', ['goal_id'], ['id'])
        batch_op.drop_column('user_id')
        batch_op.drop_column('notes')
        batch_op.drop_column('goal_type')
        batch_op.drop_column('week_start_date')

    with op.batch_alter_table('weekly_goals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_start_date', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('week_end_date', sa.DateTime(), nullable=False))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('weekly_goals', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('week_end_date')
        batch_op.drop_column('week_start_date')

    with op.batch_alter_table('weekly_goal_intensities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_start_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('goal_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('weekly_goal_intensities_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('intensity',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('week_start')

    with op.batch_alter_table('todo_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('priority', sa.VARCHAR(length=20), server_default=sa.text("'medium'::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('content')

    with op.batch_alter_table('quick_wins', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('quick_wins_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('category')
        batch_op.drop_column('points')
        batch_op.drop_column('completed')
        batch_op.drop_column('date')

    with op.batch_alter_table('quick_notes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('quick_notes_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('problems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('priority', sa.VARCHAR(length=20), server_default=sa.text("'medium'::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('category')
        batch_op.drop_column('weight')
        batch_op.drop_column('name')

    with op.batch_alter_table('long_term_goals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('long_term_goals_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('target_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.drop_column('status')

    with op.batch_alter_table('goal_ratings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('goal_ratings_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('notes',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('week')

    with op.batch_alter_table('goal_notes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('goal_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('goal_notes_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_email', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('admin_reply', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('emails_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('subject',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('is_read')
        batch_op.drop_column('email_type')
        batch_op.drop_column('date')
        batch_op.drop_column('recipient')
        batch_op.drop_column('sender')

    with op.batch_alter_table('daily_problem_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('log_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('daily_problem_logs_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('problem_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('faced')
        batch_op.drop_column('date')

    with op.batch_alter_table('daily_goal_intensities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('goal_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('log_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('daily_goal_intensities_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('intensity',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('intensity_date')

    with op.batch_alter_table('ai_challenges', schema=None) as batch_op:
        batch_op.add_column(sa.Column('challenge_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('completion_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('difficulty', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('intensity')
        batch_op.drop_column('completed_at')
        batch_op.drop_column('challenge_date')
        batch_op.drop_column('challenge_text')

    op.create_table('feedback',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('body', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='feedback_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='feedback_pkey')
    )
    op.drop_table('problem_logs')
    op.drop_table('challenges')
    # ### end Alembic commands ###
